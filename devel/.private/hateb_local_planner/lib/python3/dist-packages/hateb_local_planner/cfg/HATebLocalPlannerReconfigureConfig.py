## *********************************************************
##
## File autogenerated for the hateb_local_planner package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [], 'groups': [{'name': 'Trajectory', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 1, 'parent': 0, 'parameters': [{'name': 'teb_autosize', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Enable the automatic resizing of the trajectory during optimization (based on the temporal resolution of the trajectory, recommended)', 'min': False, 'max': True, 'srcline': 21, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'dt_ref', 'type': 'double', 'default': 0.3, 'level': 0, 'description': 'Temporal resolution of the planned trajectory (usually it is set to the magnitude of the 1/control_rate)', 'min': 0.01, 'max': 1.0, 'srcline': 25, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'dt_hysteresis', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Hysteresis that is utilized for automatic resizing depending on the current temporal resolution (dt): usually 10% of dt_ref', 'min': 0.002, 'max': 0.5, 'srcline': 29, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'global_plan_overwrite_orientation', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Some global planners are not considering the orientation at local subgoals between start and global goal, therefore determine it automatically', 'min': False, 'max': True, 'srcline': 33, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'allow_init_with_backwards_motion', 'type': 'bool', 'default': False, 'level': 0, 'description': 'If true, the underlying trajectories might be initialized with backwards motions in case the goal is behind the start within the local costmap (this is only recommended if the robot is equipped with rear sensors)', 'min': False, 'max': True, 'srcline': 37, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'max_global_plan_lookahead_dist', 'type': 'double', 'default': 3.0, 'level': 0, 'description': 'Specify maximum length (cumulative Euclidean distances) of the subset of the global plan taken into account for optimization [if 0 or negative: disabled; the length is also bounded by the local costmap size]', 'min': 0.0, 'max': 50.0, 'srcline': 41, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'force_reinit_new_goal_dist', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Force the planner to reinitialize the trajectory if a previous goal is updated with a seperation of more than the specified value in meters (skip hot-starting)', 'min': 0.0, 'max': 10.0, 'srcline': 45, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'force_reinit_new_goal_angular', 'type': 'double', 'default': 0.78, 'level': 0, 'description': 'Force the planner to reinitialize the trajectory if a previous goal is updated with a rotational difference of more than the specified value in radians (skip hot-starting)', 'min': 0.0, 'max': 4.0, 'srcline': 49, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'feasibility_check_no_poses', 'type': 'int', 'default': 5, 'level': 0, 'description': 'Specify up to which pose on the predicted plan the feasibility should be checked each sampling interval', 'min': 0, 'max': 50, 'srcline': 53, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'exact_arc_length', 'type': 'bool', 'default': False, 'level': 0, 'description': 'If true, the planner uses the exact arc length in velocity, acceleration and turning rate computations [-> increased cpu time], otherwise the euclidean approximation is used.', 'min': False, 'max': True, 'srcline': 57, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_feedback', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Publish planner feedback containing the full trajectory and a list of active obstacles (should be enabled only for evaluation or debugging purposes)', 'min': False, 'max': True, 'srcline': 61, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'visualize_with_time_as_z_axis_scale', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'If this value is bigger than 0, the trajectory and obstacles are visualized in 3d using the time as the z-axis scaled by this value. Most useful for dynamic obstacles.', 'min': 0.0, 'max': 1.0, 'srcline': 65, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'horizon_reduction_amount', 'type': 'double', 'default': 0.5, 'level': 0, 'description': 'Value by which the horizon should be reduced', 'min': 0.0, 'max': 1.0, 'srcline': 68, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'teb_init_skip_dist', 'type': 'double', 'default': 0.4, 'level': 0, 'description': 'Distance for skipping points while initializing elastic band', 'min': 0.0, 'max': 5.0, 'srcline': 71, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::TRAJECTORY', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::trajectory', 'upper': 'TRAJECTORY', 'lower': 'trajectory'}, {'name': 'ViaPoints', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 2, 'parent': 0, 'parameters': [{'name': 'global_plan_viapoint_sep', 'type': 'double', 'default': -0.1, 'level': 0, 'description': 'Min. separation between each two consecutive via-points extracted from the global plan [if negative: disabled]', 'min': -0.1, 'max': 5.0, 'srcline': 78, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'via_points_ordered', 'type': 'bool', 'default': False, 'level': 0, 'description': 'If true, the planner adheres to the order of via-points in the storage container', 'min': False, 'max': True, 'srcline': 82, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::VIAPOINTS', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::viapoints', 'upper': 'VIAPOINTS', 'lower': 'viapoints'}, {'name': 'Robot', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 3, 'parent': 0, 'parameters': [{'name': 'max_vel_x', 'type': 'double', 'default': 0.4, 'level': 0, 'description': 'Maximum translational velocity of the robot', 'min': 0.01, 'max': 100.0, 'srcline': 89, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'max_vel_x_backwards', 'type': 'double', 'default': 0.2, 'level': 0, 'description': 'Maximum translational velocity of the robot for driving backwards', 'min': 0.01, 'max': 100.0, 'srcline': 93, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'max_vel_theta', 'type': 'double', 'default': 0.3, 'level': 0, 'description': 'Maximum angular velocity of the robot', 'min': 0.01, 'max': 100.0, 'srcline': 97, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'acc_lim_x', 'type': 'double', 'default': 0.5, 'level': 0, 'description': 'Maximum translational acceleration of the robot', 'min': 0.01, 'max': 100.0, 'srcline': 101, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'acc_lim_theta', 'type': 'double', 'default': 0.5, 'level': 0, 'description': 'Maximum angular acceleration of the robot', 'min': 0.01, 'max': 100.0, 'srcline': 105, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'is_footprint_dynamic', 'type': 'bool', 'default': False, 'level': 0, 'description': 'If true, updated the footprint before checking trajectory feasibility', 'min': False, 'max': True, 'srcline': 109, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'is_real', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether the robot is real(or gazebo) or simulated', 'min': False, 'max': True, 'srcline': 113, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [{'name': 'Carlike', 'type': 'hide', 'state': True, 'cstate': 'true', 'id': 4, 'parent': 3, 'parameters': [{'name': 'min_turning_radius', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Minimum turning radius of a carlike robot (diff-drive robot: zero)', 'min': 0.0, 'max': 50.0, 'srcline': 121, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'wheelbase', 'type': 'double', 'default': 1.0, 'level': 0, 'description': "The distance between the drive shaft and steering axle (only required for a carlike robot with 'cmd_angle_instead_rotvel' enabled); The value might be negative for back-wheeled robots!", 'min': -10.0, 'max': 10.0, 'srcline': 125, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cmd_angle_instead_rotvel', 'type': 'bool', 'default': False, 'level': 0, 'description': "Substitute the rotational velocity in the commanded velocity message by the corresponding steering angle (check 'axles_distance')", 'min': False, 'max': True, 'srcline': 129, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::ROBOT::CARLIKE', 'parentclass': 'DEFAULT::ROBOT', 'parentname': 'Robot', 'field': 'DEFAULT::ROBOT::carlike', 'upper': 'CARLIKE', 'lower': 'carlike'}, {'name': 'Omnidirectional', 'type': 'hide', 'state': True, 'cstate': 'true', 'id': 5, 'parent': 3, 'parameters': [{'name': 'max_vel_y', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Maximum strafing velocity of the robot (should be zero for non-holonomic robots!)', 'min': 0.0, 'max': 100.0, 'srcline': 137, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'acc_lim_y', 'type': 'double', 'default': 0.5, 'level': 0, 'description': 'Maximum strafing acceleration of the robot', 'min': 0.01, 'max': 100.0, 'srcline': 141, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::ROBOT::OMNIDIRECTIONAL', 'parentclass': 'DEFAULT::ROBOT', 'parentname': 'Robot', 'field': 'DEFAULT::ROBOT::omnidirectional', 'upper': 'OMNIDIRECTIONAL', 'lower': 'omnidirectional'}], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::ROBOT', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::robot', 'upper': 'ROBOT', 'lower': 'robot'}, {'name': 'Other_Agents', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 6, 'parent': 0, 'parameters': [{'name': 'max_agent_vel_x', 'type': 'double', 'default': 0.4, 'level': 0, 'description': 'Maximum linear velocity for agents', 'min': 0.0, 'max': 4.0, 'srcline': 147, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'nominal_agent_vel_x', 'type': 'double', 'default': 0.2, 'level': 0, 'description': 'Nominal linear velocity for agents', 'min': 0.0, 'max': 4.0, 'srcline': 150, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'max_agent_vel_x_backwards', 'type': 'double', 'default': 0.001, 'level': 0, 'description': 'Maxium backward velocity for agents', 'min': 0.0, 'max': 4.0, 'srcline': 153, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'max_agent_vel_theta', 'type': 'double', 'default': 0.3, 'level': 0, 'description': 'Maxium angular velocity for agents', 'min': 0.0, 'max': 4.0, 'srcline': 156, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'agent_acc_lim_x', 'type': 'double', 'default': 0.6, 'level': 0, 'description': 'Maxium linear acceleration for agents', 'min': 0.0, 'max': 4.0, 'srcline': 159, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'agent_acc_lim_theta', 'type': 'double', 'default': 0.8, 'level': 0, 'description': 'Maxium angular acceleration for agents', 'min': 0.0, 'max': 4.0, 'srcline': 162, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'num_moving_avg', 'type': 'int', 'default': 5, 'level': 0, 'description': 'Number of instants for moving average', 'min': 1, 'max': 100, 'srcline': 165, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'max_agent_vel_y', 'type': 'double', 'default': 0.4, 'level': 0, 'description': 'Maximum linear velocity for agents', 'min': 0.0, 'max': 4.0, 'srcline': 171, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'agent_acc_lim_y', 'type': 'double', 'default': 0.3, 'level': 0, 'description': 'Maxium linear acceleration for agents', 'min': 0.0, 'max': 4.0, 'srcline': 175, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::OTHER_AGENTS', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::other_agents', 'upper': 'OTHER_AGENTS', 'lower': 'other_agents'}, {'name': 'GoalTolerance', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 7, 'parent': 0, 'parameters': [{'name': 'xy_goal_tolerance', 'type': 'double', 'default': 0.2, 'level': 0, 'description': 'Allowed final euclidean distance to the goal position', 'min': 0.001, 'max': 10.0, 'srcline': 183, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'yaw_goal_tolerance', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Allowed final orientation error to the goal orientation', 'min': 0.001, 'max': 3.2, 'srcline': 187, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'free_goal_vel', 'type': 'bool', 'default': False, 'level': 0, 'description': "Allow the robot's velocity to be nonzero for planning purposes (the robot can arrive at the goal with max speed)", 'min': False, 'max': True, 'srcline': 191, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::GOALTOLERANCE', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::goaltolerance', 'upper': 'GOALTOLERANCE', 'lower': 'goaltolerance'}, {'name': 'Obstacles', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 8, 'parent': 0, 'parameters': [{'name': 'min_obstacle_dist', 'type': 'double', 'default': 0.5, 'level': 0, 'description': 'Minimum desired separation from obstacles', 'min': 0.0, 'max': 10.0, 'srcline': 198, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'use_nonlinear_obstacle_penalty', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Weather to use inverse function for obstacle penalty (linear otherwise)', 'min': False, 'max': True, 'srcline': 201, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'obstacle_cost_mult', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Multiplier for obstacle cost', 'min': 0.0, 'max': 10.0, 'srcline': 204, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'inflation_dist', 'type': 'double', 'default': 0.6, 'level': 0, 'description': 'Buffer zone around obstacles with non-zero penalty costs (should be larger than min_obstacle_dist in order to take effect)', 'min': 0.0, 'max': 15.0, 'srcline': 207, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'dynamic_obstacle_inflation_dist', 'type': 'double', 'default': 0.6, 'level': 0, 'description': 'Buffer zone around predicted locations of dynamic obstacles with non-zero penalty costs (should be larger than min_obstacle_dist in order to take effect)', 'min': 0.0, 'max': 15.0, 'srcline': 211, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'include_dynamic_obstacles', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Specify whether the movement of dynamic obstacles should be predicted by a constant velocity model (this also changes the homotopy class search). If false, all obstacles are considered to be static.', 'min': False, 'max': True, 'srcline': 215, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'include_costmap_obstacles', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Specify whether the obstacles in the costmap should be taken into account directly (this is necessary if no seperate clustering and detection is implemented)', 'min': False, 'max': True, 'srcline': 219, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'legacy_obstacle_association', 'type': 'bool', 'default': False, 'level': 0, 'description': "If true, the old association strategy is used (for each obstacle, find the nearest TEB pose), otherwise the new one (for each teb pose, find only 'relevant' obstacles).", 'min': False, 'max': True, 'srcline': 223, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'obstacle_association_force_inclusion_factor', 'type': 'double', 'default': 1.5, 'level': 0, 'description': 'The non-legacy obstacle association technique tries to connect only relevant obstacles with the discretized trajectory during optimization, all obstacles within a specifed distance are forced to be included (as a multiple of min_obstacle_dist), e.g. choose 2.0 in order to consider obstacles within a radius of 2.0*min_obstacle_dist.', 'min': 0.0, 'max': 100.0, 'srcline': 227, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'obstacle_association_cutoff_factor', 'type': 'double', 'default': 5.0, 'level': 0, 'description': 'See obstacle_association_force_inclusion_factor, but beyond a multiple of [value]*min_obstacle_dist all obstacles are ignored during optimization. obstacle_association_force_inclusion_factor is processed first.', 'min': 1.0, 'max': 100.0, 'srcline': 231, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'costmap_obstacles_behind_robot_dist', 'type': 'double', 'default': 1.5, 'level': 0, 'description': 'Limit the occupied local costmap obstacles taken into account for planning behind the robot (specify distance in meters)', 'min': 0.0, 'max': 20.0, 'srcline': 235, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'obstacle_poses_affected', 'type': 'int', 'default': 30, 'level': 0, 'description': 'The obstacle position is attached to the closest pose on the trajectory to reduce computational effort, but take a number of neighbors into account as well', 'min': 0, 'max': 200, 'srcline': 239, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::OBSTACLES', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::obstacles', 'upper': 'OBSTACLES', 'lower': 'obstacles'}, {'name': 'Optimization', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 9, 'parent': 0, 'parameters': [{'name': 'no_inner_iterations', 'type': 'int', 'default': 5, 'level': 0, 'description': 'Number of solver iterations called in each outerloop iteration', 'min': 1, 'max': 100, 'srcline': 247, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'no_outer_iterations', 'type': 'int', 'default': 4, 'level': 0, 'description': 'Each outerloop iteration automatically resizes the trajectory and invokes the internal optimizer with no_inner_iterations', 'min': 1, 'max': 100, 'srcline': 251, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'optimization_activate', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Activate the optimization', 'min': False, 'max': True, 'srcline': 255, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'optimization_verbose', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Print verbose information', 'min': False, 'max': True, 'srcline': 259, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'penalty_epsilon', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Add a small safty margin to penalty functions for hard-constraint approximations', 'min': 0.0, 'max': 1.0, 'srcline': 263, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'time_penalty_epsilon', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Add a safty margin to penalty functions for time optimality contraint', 'min': 0.0, 'max': 1.0, 'srcline': 266, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cap_optimaltime_penalty', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Weather to cap optimal time penalty with initial time between teb vertices', 'min': False, 'max': True, 'srcline': 270, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'weight_max_vel_x', 'type': 'double', 'default': 2.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed translational velocity', 'min': 0.0, 'max': 1000.0, 'srcline': 274, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_max_vel_y', 'type': 'double', 'default': 2.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed strafing velocity (in use only for holonomic robots)', 'min': 0.0, 'max': 1000.0, 'srcline': 278, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_max_vel_theta', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed angular velocity', 'min': 0.0, 'max': 1000.0, 'srcline': 282, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_acc_lim_x', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed translational acceleration', 'min': 0.0, 'max': 1000.0, 'srcline': 286, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_acc_lim_y', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed strafing acceleration (in use only for holonomic robots)', 'min': 0.0, 'max': 1000.0, 'srcline': 290, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_acc_lim_theta', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed angular acceleration', 'min': 0.0, 'max': 1000.0, 'srcline': 294, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_kinematics_nh', 'type': 'double', 'default': 1000.0, 'level': 0, 'description': 'Optimization weight for satisfying the non-holonomic kinematics', 'min': 0.0, 'max': 10000.0, 'srcline': 298, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_kinematics_forward_drive', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for forcing the robot to choose only forward directions (positive transl. velocities, only diffdrive robot)', 'min': 0.0, 'max': 1000.0, 'srcline': 302, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_kinematics_turning_radius', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for enforcing a minimum turning radius (carlike robots)', 'min': 0.0, 'max': 1000.0, 'srcline': 306, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_optimaltime', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for contracting the trajectory w.r.t. transition time', 'min': 0.0, 'max': 1000.0, 'srcline': 310, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_shortest_path', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for contracting the trajectory w.r.t. path length', 'min': 0.0, 'max': 100.0, 'srcline': 314, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_obstacle', 'type': 'double', 'default': 50.0, 'level': 0, 'description': 'Optimization weight for satisfying a minimum seperation from obstacles', 'min': 0.0, 'max': 1000.0, 'srcline': 318, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_inflation', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Optimization weight for the inflation penalty (should be small)', 'min': 0.0, 'max': 10.0, 'srcline': 322, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_dynamic_obstacle', 'type': 'double', 'default': 50.0, 'level': 0, 'description': 'Optimization weight for satisfying a minimum seperation from dynamic obstacles', 'min': 0.0, 'max': 1000.0, 'srcline': 326, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_dynamic_obstacle_inflation', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Optimization weight for the inflation penalty of dynamic obstacles (should be small)', 'min': 0.0, 'max': 10.0, 'srcline': 330, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_viapoint', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for minimizing the distance to via-points', 'min': 0.0, 'max': 1000.0, 'srcline': 334, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_adapt_factor', 'type': 'double', 'default': 2.0, 'level': 0, 'description': "Some special weights (currently 'weight_obstacle') are repeatedly scaled by this factor in each outer TEB iteration (weight_new: weight_old * factor); Increasing weights iteratively instead of setting a huge value a-priori leads to better numerical conditions of the underlying optimization problem.", 'min': 1.0, 'max': 100.0, 'srcline': 338, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'obstacle_cost_exponent', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Exponent for nonlinear obstacle cost (cost = linear_cost * obstacle_cost_exponent). Set to 1 to disable nonlinear cost (default)', 'min': 0.01, 'max': 100.0, 'srcline': 342, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_max_agent_vel_x', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed translational velocity in x axis for agent', 'min': 2.0, 'max': 1000.0, 'srcline': 345, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_max_agent_vel_y', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed translational velocity in y axis for agent', 'min': 2.0, 'max': 1000.0, 'srcline': 348, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_nominal_agent_vel_x', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for satisfying the nominal translational velocity for agent', 'min': 2.0, 'max': 1000.0, 'srcline': 351, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_max_agent_vel_theta', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed rotational velocity for agent', 'min': 2.0, 'max': 1000.0, 'srcline': 354, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_acc_lim_x', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed translational acceleration in x for agent', 'min': 2.0, 'max': 1000.0, 'srcline': 357, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_acc_lim_y', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed translational acceleration in y for agent', 'min': 2.0, 'max': 1000.0, 'srcline': 360, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_acc_lim_theta', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Optimization weight for satisfying the maximum allowed rotational acceleration for agent', 'min': 2.0, 'max': 1000.0, 'srcline': 363, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_optimaltime', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for contracting the trajectory w.r.t transition time for agent', 'min': 0.0, 'max': 1000.0, 'srcline': 366, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_viapoint', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Optimization weight for minimizing the distance from agent to its via-points', 'min': 0.0, 'max': 1000.0, 'srcline': 369, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_robot_safety', 'type': 'double', 'default': 20.0, 'level': 0, 'description': 'Optimization weight for satisfying a minimum seperation between agent and robot', 'min': 0.0, 'max': 1000.0, 'srcline': 372, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_agent_safety', 'type': 'double', 'default': 20.0, 'level': 0, 'description': 'Optimization weight for satisfying a minimum seperation between each pair of agent', 'min': 0.0, 'max': 1000.0, 'srcline': 375, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_robot_ttc', 'type': 'double', 'default': 20.0, 'level': 0, 'description': 'Optimization weight for agent-robot time-to-collision checking', 'min': 0.0, 'max': 1000.0, 'srcline': 378, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_robot_ttcplus', 'type': 'double', 'default': 20.0, 'level': 0, 'description': 'Optimization weight for agent-robot time-to-collision-plus checking', 'min': 0.0, 'max': 1000.0, 'srcline': 381, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_robot_rel_vel', 'type': 'double', 'default': 20.0, 'level': 0, 'description': 'Optimization weight for agent-robot relative velocity costs', 'min': 0.0, 'max': 1000.0, 'srcline': 384, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_agent_robot_visibility', 'type': 'double', 'default': 20.0, 'level': 0, 'description': 'Optimization weight for agent-robot visibility costs', 'min': 0.0, 'max': 1000.0, 'srcline': 387, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'agent_robot_ttc_scale_alpha', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Scale alpha for for agent-robot time-to-collision scaling', 'min': 0.0, 'max': 1000.0, 'srcline': 390, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'agent_robot_ttcplus_scale_alpha', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Scale alpha for for agent-robot time-to-collision plus scaling', 'min': 0.0, 'max': 1000.0, 'srcline': 393, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'weight_invisible_human', 'type': 'double', 'default': 20.0, 'level': 0, 'description': "Optimization weight for invisible humans' costs", 'min': 0.0, 'max': 1000.0, 'srcline': 396, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'fov', 'type': 'double', 'default': 90.0, 'level': 0, 'description': 'Horizontal field of view of the agent (degrees). Used for the visibility constraint. If the robot is in the field of view,the visibility constraint is 0 else it increase.', 'min': 0.0, 'max': 360.0, 'srcline': 399, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'disable_warm_start', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to use warm start for already initiated bands', 'min': False, 'max': True, 'srcline': 403, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'disable_rapid_omega_chage', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Wheter to disble rapid change of omega value of controller command in post-processing', 'min': False, 'max': True, 'srcline': 407, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'omega_chage_time_seperation', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Minimal amount of time to wait before allowing rapid change in omeag value for controller command in post-processing', 'min': 0.0, 'max': 10.0, 'srcline': 411, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::OPTIMIZATION', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::optimization', 'upper': 'OPTIMIZATION', 'lower': 'optimization'}, {'name': 'Hateb_constraints', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 10, 'parent': 0, 'parameters': [{'name': 'planning_mode', 'type': 'int', 'default': 1, 'level': 0, 'description': 'Mode under which planner should run, 0=no-agents/humans, 1=normal, 2=approach', 'min': 0, 'max': 2, 'srcline': 423, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': "{'enum': [{'name': 'DisregardHumans', 'type': 'int', 'value': 0, 'srcline': 419, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'description': 'Plan without considering agents/humans in the area', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'HumanAware', 'type': 'int', 'value': 1, 'srcline': 420, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'description': 'Human-Aware planning with mutiple elastic bands', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Approach', 'type': 'int', 'value': 2, 'srcline': 421, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'description': 'Plan for approach behavior', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set the planning mode'}", 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'use_agent_robot_safety_c', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to use agent-robot safety constraints', 'min': False, 'max': True, 'srcline': 426, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'use_agent_agent_safety_c', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to use agent-agent safety constraints', 'min': False, 'max': True, 'srcline': 429, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'use_agent_robot_ttc_c', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to use agent-robot time-to-collision constraints', 'min': False, 'max': True, 'srcline': 432, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'scale_agent_robot_ttc_c', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to scale up-down agent-robot time-to-collision constraints with distance', 'min': False, 'max': True, 'srcline': 435, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'use_agent_robot_rel_vel_c', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to use agent-robot relative velocity constraints', 'min': False, 'max': True, 'srcline': 438, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'use_agent_robot_visi_c', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to use agent-robot visibility constraints', 'min': False, 'max': True, 'srcline': 441, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'use_agent_robot_ttcplus_c', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to use agent-robot time-to-collision plus constraints', 'min': False, 'max': True, 'srcline': 444, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'add_invisible_humans', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to use invisible humans constraint or not', 'min': False, 'max': True, 'srcline': 447, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'scale_agent_robot_ttcplus_c', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to scale up-down agent-robot time-to-collision plus constraints with distance', 'min': False, 'max': True, 'srcline': 450, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'use_agent_elastic_vel', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to use elasticity in velocity for agent', 'min': False, 'max': True, 'srcline': 453, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'use_external_prediction', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to use external prediction or velocity-obstacle method', 'min': False, 'max': True, 'srcline': 456, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'predict_agent_behind_robot', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to predict agent goal pose behind the robot for external prediction', 'min': False, 'max': True, 'srcline': 459, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'predict_agent_goal', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to predict agent goal pose for external prediction', 'min': False, 'max': True, 'srcline': 462, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'min_agent_robot_dist', 'type': 'double', 'default': 0.6, 'level': 0, 'description': 'Minumum allowed distance between agent and robot', 'min': 0.0, 'max': 5.0, 'srcline': 465, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'min_agent_agent_dist', 'type': 'double', 'default': 0.2, 'level': 0, 'description': 'Minumum allowed distance between two agent', 'min': 0.0, 'max': 5.0, 'srcline': 468, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ttc_threshold', 'type': 'double', 'default': 5.0, 'level': 0, 'description': 'Threshold for time-to-collision between agent and robot', 'min': 0.0, 'max': 100.0, 'srcline': 471, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'rel_vel_cost_threshold', 'type': 'double', 'default': 5.0, 'level': 0, 'description': 'Threshold for relative velocity costs between agent and robot', 'min': 0.0, 'max': 100.0, 'srcline': 474, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'invisible_human_threshold', 'type': 'double', 'default': 5.0, 'level': 0, 'description': 'Threshold for invisible humans cost', 'min': 0.0, 'max': 100.0, 'srcline': 477, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'visibility_cost_threshold', 'type': 'double', 'default': 5.0, 'level': 0, 'description': 'Threshold for visibility costs between agent and robot', 'min': 0.0, 'max': 100.0, 'srcline': 480, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'agent_pose_prediction_reset_time', 'type': 'double', 'default': 2.0, 'level': 0, 'description': 'Time since last call to the planner after which agent pose prediction is resetted', 'min': 0.0, 'max': 20.0, 'srcline': 483, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ttcplus_threshold', 'type': 'double', 'default': 5.0, 'level': 0, 'description': 'Threshold for time-to-collision plus between agent and robot', 'min': 0.0, 'max': 100.0, 'srcline': 486, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ttcplus_timer', 'type': 'double', 'default': 20.0, 'level': 0, 'description': 'Timer for the ttcplus, how many tenth of second the robot wait before to increase the ttcplus cost', 'min': 0.0, 'max': 1000.0, 'srcline': 489, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [{'name': 'Approach', 'type': 'hide', 'state': True, 'cstate': 'true', 'id': 11, 'parent': 10, 'parameters': [{'name': 'approach_id', 'type': 'int', 'default': 1, 'level': 0, 'description': 'ID of the tracked person to approach', 'min': 1, 'max': 32767, 'srcline': 496, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'approach_dist', 'type': 'double', 'default': 0.5, 'level': 0, 'description': 'Goal distance in front of the agent, for approach behavior', 'min': 0.0, 'max': 5.0, 'srcline': 497, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'approach_angle', 'type': 'double', 'default': 3.14, 'level': 0, 'description': 'Goal angle that defines in-fornt-of-the-agent, for approach behavior', 'min': 0.0, 'max': 6.28, 'srcline': 498, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'approach_dist_tolerance', 'type': 'double', 'default': 0.2, 'level': 0, 'description': 'Goal distance tolerance for adding new point to the global path of the robot', 'min': 0.0, 'max': 5.0, 'srcline': 499, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'approach_angle_tolerance', 'type': 'double', 'default': 0.3, 'level': 0, 'description': 'Goal angle tolerance for adding new point to the global path of the robot', 'min': 0.0, 'max': 6.28, 'srcline': 500, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::HATEB_CONSTRAINTS::APPROACH', 'parentclass': 'DEFAULT::HATEB_CONSTRAINTS', 'parentname': 'Hateb_constraints', 'field': 'DEFAULT::HATEB_CONSTRAINTS::approach', 'upper': 'APPROACH', 'lower': 'approach'}], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::HATEB_CONSTRAINTS', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::hateb_constraints', 'upper': 'HATEB_CONSTRAINTS', 'lower': 'hateb_constraints'}, {'name': 'HCPlanning', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 12, 'parent': 0, 'parameters': [{'name': 'enable_multithreading', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Activate multiple threading for planning multiple trajectories in parallel', 'min': False, 'max': True, 'srcline': 506, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'max_number_classes', 'type': 'int', 'default': 5, 'level': 0, 'description': 'Specify the maximum number of allowed alternative homotopy classes (limits computational effort)', 'min': 1, 'max': 100, 'srcline': 510, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'selection_cost_hysteresis', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Specify how much trajectory cost must a new candidate have w.r.t. a previously selected trajectory in order to be selected (selection if new_cost < old_cost*factor)', 'min': 0.0, 'max': 2.0, 'srcline': 514, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'selection_prefer_initial_plan', 'type': 'double', 'default': 0.95, 'level': 0, 'description': 'Specify a cost reduction in the interval (0,1) for the trajectory in the equivalence class of the initial plan.)', 'min': 0.0, 'max': 1.0, 'srcline': 519, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'selection_obst_cost_scale', 'type': 'double', 'default': 2.0, 'level': 0, 'description': "Extra scaling of obstacle cost terms just for selecting the 'best' candidate (new_obst_cost: obst_cost*factor)", 'min': 0.0, 'max': 1000.0, 'srcline': 523, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'selection_viapoint_cost_scale', 'type': 'double', 'default': 1.0, 'level': 0, 'description': "Extra scaling of via-point cost terms just for selecting the 'best' candidate. (new_viapt_cost: viapt_cost*factor)", 'min': 0.0, 'max': 100.0, 'srcline': 527, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'selection_alternative_time_cost', 'type': 'bool', 'default': False, 'level': 0, 'description': 'If true, time cost is replaced by the total transition time.', 'min': False, 'max': True, 'srcline': 531, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'switching_blocking_period', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'Specify a time duration in seconds that needs to be expired before a switch to new equivalence class is allowed', 'min': 0.0, 'max': 60.0, 'srcline': 535, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'roadmap_graph_no_samples', 'type': 'int', 'default': 15, 'level': 0, 'description': 'Specify the number of samples generated for creating the roadmap graph, if simple_exploration is turend off', 'min': 1, 'max': 100, 'srcline': 539, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'roadmap_graph_area_width', 'type': 'double', 'default': 5.0, 'level': 0, 'description': 'Specify the width of the area in which sampled will be generated between start and goal [m] (the height equals the start-goal distance)', 'min': 0.1, 'max': 20.0, 'srcline': 543, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'roadmap_graph_area_length_scale', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'The length of the rectangular region is determined by the distance between start and goal. This parameter further scales the distance such that the geometric center remains equal!)', 'min': 0.5, 'max': 2.0, 'srcline': 547, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'h_signature_prescaler', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Scale number of obstacle value in order to allow huge number of obstacles. Do not choose it extremly low, otherwise obstacles cannot be distinguished from each other (0.2<H<=1)', 'min': 0.2, 'max': 1.0, 'srcline': 551, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'h_signature_threshold', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Two h-signuteres are assumed to be equal, if both the difference of real parts and complex parts are below the specified threshold', 'min': 0.0, 'max': 1.0, 'srcline': 555, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'obstacle_heading_threshold', 'type': 'double', 'default': 0.45, 'level': 0, 'description': 'Specify the value of the normalized scalar product between obstacle heading and goal heading in order to take them (obstacles) into account for exploration)', 'min': 0.0, 'max': 1.0, 'srcline': 559, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'viapoints_all_candidates', 'type': 'bool', 'default': True, 'level': 0, 'description': 'If true, all trajectories of different topologies are attached to the set of via-points, otherwise only the trajectory sharing the same one as the initial/global plan is attached (no effect in test_optim_node).', 'min': False, 'max': True, 'srcline': 563, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'visualize_hc_graph', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Visualize the graph that is created for exploring new homotopy classes', 'min': False, 'max': True, 'srcline': 567, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::HCPLANNING', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::hcplanning', 'upper': 'HCPLANNING', 'lower': 'hcplanning'}, {'name': 'Recovery', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 13, 'parent': 0, 'parameters': [{'name': 'shrink_horizon_backup', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Allows the planner to shrink the horizon temporary (50%) in case of automatically detected issues.', 'min': False, 'max': True, 'srcline': 575, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'oscillation_recovery', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Try to detect and resolve oscillations between multiple solutions in the same equivalence class (robot frequently switches between left/right/forward/backwards).', 'min': False, 'max': True, 'srcline': 579, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::RECOVERY', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::recovery', 'upper': 'RECOVERY', 'lower': 'recovery'}, {'name': 'Visualization', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 14, 'parent': 0, 'parameters': [{'name': 'publish_robot_global_plan', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to publish the global robot plan.', 'min': False, 'max': True, 'srcline': 587, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_robot_local_plan', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to publish the local robot plan.', 'min': False, 'max': True, 'srcline': 588, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_robot_local_plan_poses', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to publish the robot local plan poses.', 'min': False, 'max': True, 'srcline': 589, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_robot_local_plan_fp_poses', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to publish robot footprint at the local plan poses.', 'min': False, 'max': True, 'srcline': 590, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_agents_global_plans', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to publish global agents plans.', 'min': False, 'max': True, 'srcline': 591, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_agents_local_plans', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Whether to publish the full agents optimized trajectories.', 'min': False, 'max': True, 'srcline': 592, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_agents_local_plan_poses', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to publish the posed for optimized agents trajectories.', 'min': False, 'max': True, 'srcline': 593, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'publish_agents_local_plan_fp_poses', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Whether to publish robot footprint at the posed for optimized agents trajectories.', 'min': False, 'max': True, 'srcline': 594, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'pose_array_z_scale', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'Multiplier to show time on z value of pose array for agents and robot', 'min': 0.0, 'max': 100.0, 'srcline': 595, 'srcfile': '/home/az/arena_ws/src/planners/cohan/hateb_local_planner/cfg/HATebLocalPlannerReconfigure.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::VISUALIZATION', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::visualization', 'upper': 'VISUALIZATION', 'lower': 'visualization'}], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

HATebLocalPlannerReconfigure_DisregardHumans = 0
HATebLocalPlannerReconfigure_HumanAware = 1
HATebLocalPlannerReconfigure_Approach = 2
