## *********************************************************
##
## File autogenerated for the mpc_local_planner package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [], 'groups': [{'name': 'Collision_avoidance', 'type': 'tab', 'state': True, 'cstate': 'true', 'id': 1, 'parent': 0, 'parameters': [{'name': 'include_costmap_obstacles', 'type': 'bool', 'default': True, 'level': 0, 'description': 'Specify whether the obstacles in the costmap should be taken into account directly (this is necessary if no seperate clustering and detection is implemented)', 'min': False, 'max': True, 'srcline': 20, 'srcfile': '/home/az/arena_ws/src/planners/mpc/mpc_local_planner/cfg/mpc_collision.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'costmap_obstacles_behind_robot_dist', 'type': 'double', 'default': 1.5, 'level': 0, 'description': 'Limit the occupied local costmap obstacles taken into account for planning behind the robot (specify distance in meters)', 'min': 0.0, 'max': 10.0, 'srcline': 22, 'srcfile': '/home/az/arena_ws/src/planners/mpc/mpc_local_planner/cfg/mpc_collision.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'collision_check_min_resolution_angular', 'type': 'double', 'default': 3.1415, 'level': 0, 'description': '', 'min': -3.1415, 'max': 3.1415, 'srcline': 24, 'srcfile': '/home/az/arena_ws/src/planners/mpc/mpc_local_planner/cfg/mpc_collision.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'collision_check_no_poses', 'type': 'int', 'default': -1, 'level': 0, 'description': '', 'min': -1, 'max': 100, 'srcline': 25, 'srcfile': '/home/az/arena_ws/src/planners/mpc/mpc_local_planner/cfg/mpc_collision.cfg', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::COLLISION_AVOIDANCE', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::collision_avoidance', 'upper': 'COLLISION_AVOIDANCE', 'lower': 'collision_avoidance'}], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

