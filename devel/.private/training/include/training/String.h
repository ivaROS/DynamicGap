// Generated by gencpp from file training/String.msg
// DO NOT EDIT!


#ifndef TRAINING_MESSAGE_STRING_H
#define TRAINING_MESSAGE_STRING_H

#include <ros/service_traits.h>


#include <training/StringRequest.h>
#include <training/StringResponse.h>


namespace training
{

struct String
{

typedef StringRequest Request;
typedef StringResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct String
} // namespace training


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::training::String > {
  static const char* value()
  {
    return "64e58419496c7248b4ef25731f88b8c3";
  }

  static const char* value(const ::training::String&) { return value(); }
};

template<>
struct DataType< ::training::String > {
  static const char* value()
  {
    return "training/String";
  }

  static const char* value(const ::training::String&) { return value(); }
};


// service_traits::MD5Sum< ::training::StringRequest> should match
// service_traits::MD5Sum< ::training::String >
template<>
struct MD5Sum< ::training::StringRequest>
{
  static const char* value()
  {
    return MD5Sum< ::training::String >::value();
  }
  static const char* value(const ::training::StringRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::training::StringRequest> should match
// service_traits::DataType< ::training::String >
template<>
struct DataType< ::training::StringRequest>
{
  static const char* value()
  {
    return DataType< ::training::String >::value();
  }
  static const char* value(const ::training::StringRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::training::StringResponse> should match
// service_traits::MD5Sum< ::training::String >
template<>
struct MD5Sum< ::training::StringResponse>
{
  static const char* value()
  {
    return MD5Sum< ::training::String >::value();
  }
  static const char* value(const ::training::StringResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::training::StringResponse> should match
// service_traits::DataType< ::training::String >
template<>
struct DataType< ::training::StringResponse>
{
  static const char* value()
  {
    return DataType< ::training::String >::value();
  }
  static const char* value(const ::training::StringResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TRAINING_MESSAGE_STRING_H
