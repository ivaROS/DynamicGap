// Auto-generated. Do not edit!

// (in-package mbf_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class RecoveryGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.behavior = null;
      this.concurrency_slot = null;
    }
    else {
      if (initObj.hasOwnProperty('behavior')) {
        this.behavior = initObj.behavior
      }
      else {
        this.behavior = '';
      }
      if (initObj.hasOwnProperty('concurrency_slot')) {
        this.concurrency_slot = initObj.concurrency_slot
      }
      else {
        this.concurrency_slot = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type RecoveryGoal
    // Serialize message field [behavior]
    bufferOffset = _serializer.string(obj.behavior, buffer, bufferOffset);
    // Serialize message field [concurrency_slot]
    bufferOffset = _serializer.uint8(obj.concurrency_slot, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type RecoveryGoal
    let len;
    let data = new RecoveryGoal(null);
    // Deserialize message field [behavior]
    data.behavior = _deserializer.string(buffer, bufferOffset);
    // Deserialize message field [concurrency_slot]
    data.concurrency_slot = _deserializer.uint8(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += _getByteLength(object.behavior);
    return length + 5;
  }

  static datatype() {
    // Returns string type for a message object
    return 'mbf_msgs/RecoveryGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'ce28884316a172b85e57b78a84014451';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Run one of the recovery behavior listed on recovery_behaviors parameter
    
    string behavior
    
    # use different slots for concurrency
    uint8 concurrency_slot
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new RecoveryGoal(null);
    if (msg.behavior !== undefined) {
      resolved.behavior = msg.behavior;
    }
    else {
      resolved.behavior = ''
    }

    if (msg.concurrency_slot !== undefined) {
      resolved.concurrency_slot = msg.concurrency_slot;
    }
    else {
      resolved.concurrency_slot = 0
    }

    return resolved;
    }
};

module.exports = RecoveryGoal;
