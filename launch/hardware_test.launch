<launch>
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find dynamic_gap)/params/dynamic_gap_rosconsole.conf"/>

    <arg name="robot_radius" default="0.20"/>
    <arg name="map_file" default="$(find dynamic_gap)/maps/empty_room_20x20.yaml" />
    <arg name="global_planning_freq" default="$(optenv GM_PARAM_GLOBAL_PLANNING_FREQ 1)"/>
    <arg name="controller_freq" default="$(optenv GM_PARAM_CONTROLLER_FREQ 5)"/>
    <arg name="use_recovery_behaviors" default="false"/>

    <!-- run robot-->
    <include file="$(find turtlebot_bringup)/launch/minimal.launch"/>

    <!-- run laser-->
    <include file="$(find rplidar_ros)/launch/rplidar_s2.launch"/>
    
    <node pkg="mod_tb_scan" type="mod_tb_scan" name="mod_tb_scan" output="log" />

	<node pkg="tf" type="static_transform_publisher" name="world2odom" args="0 0 0 0 0 0 /world /odom 1" />
	<node pkg="tf" type="static_transform_publisher" name="world_map_broadcaster" args="0 0 0 0 0 0 /world /map 1" />
    <node pkg="tf" type="static_transform_publisher" name="world2kmap" args="0 0 0 0 0 0  /map /known_map 1" />
    <node pkg="tf" type="static_transform_publisher" name="base2laser" args="0 0 0 0 0 0  /base_link /laser 1" />
    <node pkg="tf" type="static_transform_publisher" name="base2modlaser" args="0 0 0 0 0 3.15149  /laser /mod_laser 1" />

    <!-- map server, necessary for /move_base/make_plan service to work -->
    <node name="known_map" pkg="map_server" type="map_server" args="$(arg map_file)" required="true">
        <remap from="/map" to="/known_map"/>
        <remap from="/map_metadata" to="/known_map_metadata"/>
        <param name="frame_id" value="known_map"/>
    </node>

    <!-- amcl or mapping or whatever it is from legged_software gazebo, just load in empty map -->

    <!-- run planner-->
    <!-- map scan and odom topics-->

  <arg name="projection_operator" default="true"/>

  <arg name="debug" default="false" />

  <arg name="xterm_prefix" value="xterm -e gdb -ex run --args" />
  <arg name="valgrind_prefix" value="valgrind --leak-check=full" />

  <arg name="debug_prefix" value="" unless="$(arg debug)"/>
  <arg name="debug_prefix" value="xterm -e gdb -ex run --args" if="$(arg debug)"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="log" clear_params="true" launch-prefix="$(arg debug_prefix)">
      <param name="base_local_planner" value="dynamic_gap/DynamicGapPlanner" />      
      
      <rosparam file="$(find dynamic_gap)/params/common_costmap_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find dynamic_gap)/params/common_costmap_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find dynamic_gap)/params/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find dynamic_gap)/params/global_costmap_params.yaml" command="load"/>
      
      <rosparam file="$(find dynamic_gap)/params/move_base_params.yaml" command="load"/>
      <rosparam file="$(find dynamic_gap)/params/global_planner_params.yaml" command="load" ns="GlobalPlanner"/>
      <rosparam file="$(find dynamic_gap)/params/dynamicgap_local_planner_holonomic_params.yaml" command="load"/>

      <param name="recovery_behavior_enabled" value="false" unless="$(arg use_recovery_behaviors)"/>

      <param name="controller_frequency" value="$(arg controller_freq)" />
      <param name="planner_frequency" value="$(arg global_planning_freq)"/>

      <remap from="/cmd_vel" to="/mobile_base/commands/velocity"/>

      <param name="DynamicGapPlanner/map_frame_id" value="known_map"/>
      <param name="DynamicGapPlanner/odom_frame_id" value="odom"/>
      <param name="DynamicGapPlanner/robot_frame_id" value="base_footprint"/>
      <param name="DynamicGapPlanner/sensor_frame_id" value="laser"/>

      <param name="DynamicGapPlanner/projection_operator" value="$(arg projection_operator)"/>

      <param name="DynamicGapPlanner/num_agents" value="0" />
      <param name="global_costmap/obstacle_layer/scan/topic" value="/mod_scan" />
      <param name="global_costmap/robot_base_frame" value="base_footprint" />

      <param name="local_costmap/obstacle_layer/scan/topic" value="/mod_scan" />
      <param name="local_costmap/robot_base_frame" value="base_footprint" />
      
  </node>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find dynamic_gap)/rviz/dgap.rviz" />

</launch>